-- DROP TABLE IF EXISTS SUBACTIVITY;	
-- DROP TABLE IF EXISTS ACTIVITY_GRI;
-- DROP TABLE IF EXISTS GRI;
-- DROP TABLE IF EXISTS ACTIVITY;
-- DROP TABLE IF EXISTS NOTPAY_REASON;
-- DROP TABLE IF EXISTS STATES;
-- DROP TABLE IF EXISTS AREA_HEAD;
-- DROP TABLE IF EXISTS AREA;
-- DROP TABLE IF EXISTS USERS;
-- DROP TABLE IF EXISTS ROLES;

CREATE TABLE ROLES(
	ID_ROLE SERIAL PRIMARY KEY,
	ROLE_DESCRIPTION VARCHAR (50) NOT NULL
);

CREATE TABLE AREAS(
	ID_AREA SERIAL PRIMARY KEY,
	AREA_DESCRIPTION VARCHAR (50) NOT NULL
)

CREATE TABLE USERS (
	ID_USER SERIAL PRIMARY KEY,
	USER_NAME VARCHAR (50) NOT NULL,
	USER_SURNAME VARCHAR (50) NOT NULL,
	EMAIL VARCHAR (100) NOT NULL,
	NICKNAME VARCHAR (70) NOT NULL,
	USER_PASSWORD VARCHAR (8) NOT NULL,
	ID_ROLE INT NOT NULL REFERENCES ROLES(ID_ROLE),
	AREA INT REFERENCES AREAS(ID_AREA)
);


CREATE TABLE AREAS_HEAD (
	
	ID_AREA_USER SERIAL PRIMARY KEY,
	AREA_HEAD INT REFERENCES USERS(ID_USER),
	AREA INT REFERENCES AREA(ID_AREA)
	);

CREATE TABLE STATES(
	ID_STATE SERIAL PRIMARY KEY,
	DESCRIPTION_STATE VARCHAR(50)
);

CREATE TABLE NOTPAYS_REASON(
	ID_NOTPAY_REASON SERIAL PRIMARY KEY,
	DESCRIPTION_NOTPAY_REASON VARCHAR(1000)
);

CREATE TABLE ACTIVITIES (
	ID_ACTIVITY SERIAL PRIMARY KEY,
	ACTIVITY_TITLE VARCHAR (50) NOT NULL,
	ACTIVITY_DESCRIPTION TEXT NOT NULL,
	ACTIVITY_MANDATED INT REFERENCES USERS(ID_USER),
	AREA INT REFERENCES AREA(ID_AREA),
	RELEVANCE INT NOT NULL CHECK (RELEVANCE >= 0 and RELEVANCE <= 5),
	DATE_START DATE NOT NULL,
	DATE_END DATE NOT NULL,
	DELIVERY_STATE INT REFERENCES STATES(ID_STATE),
	ACTIVITY_STATE INT REFERENCES STATES(ID_STATE)
);

CREATE TABLE GRI(
	ID_GRI SERIAL PRIMARY KEY,
	GRI_DESCRIPTION VARCHAR (50) NOT NULL,
	GRI_SERIE VARCHAR (50) NOT NULL
);
	
CREATE TABLE ACTIVITIES_GRI(
	ID_ACTIVITY_GRI SERIAL PRIMARY KEY,
	ID_ACTIVITY INT NOT NULL REFERENCES ACTIVITIES(ID_ACTIVITY),
	ID_GRI INT NOT NULL REFERENCES GRI(ID_GRI)
);




CREATE TABLE SUBACTIVITY(
	ID_SUBACTIVITY SERIAL PRIMARY KEY,
	ID_ACTIVITY INT NOT NULL REFERENCES ACTIVITY(ID_ACTIVITY),
	SUBACTIVITY_MANDATED INT NOT NULL REFERENCES USERS(ID_USER),
	SUBATIVITY_TITLE VARCHAR (50) NOT NULL,
	SUBACTIVITY_DESCRIPTION TEXT ,
	DURATION DATE NOT NULL,
	TIME_WORK INT,
	TIME_PAID INT,
	TIME_NOT_PAID INT,
	NOTPAY_REASON INT REFERENCES NOTPAY_REASON(ID_NOTPAY_REASON)
);
